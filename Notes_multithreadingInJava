Thread
-------
start()-- helps the thread to start.
     run()- internally calls theis method to go further to initate the task;
joint()-- waits until the thread is fineshed or terminated.


sleep() -- used to apply temporery hold on the thread and release once the time is up.
          --> if any interuption occurs it will lead to interupatedExcption occurs
 eg : notification service example were we give pause for every notification sent to the end user.

wait() -- thread is put hold for a specific condition, it is realeased by other thread using the methods notify() and notifyAll();
       -- it is only used inside the synchronized bloack and synchrronized methods.
 eg : -- needs more clarity on this ???      




Visibility And Atomicity

Visibility : is about seeing or getting most up to  date information of any object, while working on a multithreaded environment we end up having the
             we might encounter with stale data if two threads are working symyltaniously.
             solution is  : volatile key word and synchronized block. 
Example :
          private static volatile boolean stopRequested = false;  -- everytime you update resourse. it is intemated to all the other 
           data threads who are accessing them. 

Atomicity  : is Race condition,
              were we encounter the situation at which two threads might update the same resource incompletly. 
              which might lead to currupted data.
                Operations as single individual unit. 
                  using atomic integers and concurrent locks packages..

Example :  need to get more clarity on this.

          




