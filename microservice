how do you communicate between the micro-service ?
how do you migrate from  monolithic to a microservice  application? 
  -- stangler design patter. 
  -- circuit breaker design pattern 
  -- saga design pattern? 
  
How do you migrate from monolith to micro service?
How do you optimise your application?  
  -- multiple instance to your server? 
  -- dp optimization? 
  -- horizontal and vertical scaling


1. Monolith vs Microservices differences and when to choose which.
2. How to design a microservice from scratch.
3. API Gateway pattern and its advantages.
4. Inter-service communication: REST vs Messaging.
5. Circuit Breaker pattern and its implementation using Resilience4j.
6. Load balancing in microservices using Spring Cloud Load Balancer.
7. How Spring Cloud Config helps in centralized configuration management.
8. Service discovery using Eureka or Consul.
9. Feign Client vs WebClient: Which one to use and why.
10. Event-driven architecture and Kafka integration.
11. Database per service vs Shared Database: Pros and cons.
12. Saga Pattern for distributed transactions in microservices.
13. JWT-based authentication and OAuth2 in microservices.
14. How to handle security in an API Gateway.
15. Observability: Logging, tracing, and monitoring best practices.
16. Role of Prometheus and Grafana in microservices monitoring.
17. Kubernetes deployment strategies for microservices.
18. Blue-Green and Canary deployments in microservices.
19. When to use WebFlux for reactive microservices.
20. CQRS and Event Sourcing: When and why to use them.
