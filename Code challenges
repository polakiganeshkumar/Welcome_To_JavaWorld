phone number code for fetching the alphabets.
student and there subjects in it as a list , now i need to find the maximum score in the list.
Java 8 Interview question coding :: "ganesh kumar polaki i am working on my self and building". 
swap this 2 words and make the 2 one capital.
can i get the first vowels which match the first letter in the string need its index.
java 8 - find the distinct elements in the string 
"GaneshPolaki".chars().map(c->(char)c).distinct().forEach(System.out :: PrintLn);
find the maximum value in an list of elemnts using streams.
/*
	 * You need to develop a simple REST API using Spring Boot and JPA that allows
	 * users to manage a list of employees. The API should support the following
	 * operations:
	 *  Add a new employee. 
	 *  Get the list of all employees. 
	 *  Get details of  a specific employee by ID. 
	 *  
	 *  Update an existing employee.
	 *  
	 *   Delete an employee by ID.
	 *   
	 *   Each employee should have the following fields: 
	 *   id (Auto-generated) name
	 *  (String) email 
	 *  (String) designation
	 *   (String) salary 
	 *   (Double) Requirements:
	 * 
	 * Use Spring Boot with Spring MVC and JPA.
	 *  Store data in an H2 in-memory database.
	 *  
	 *  Use RESTful API principles. 
	 *  
	 *  Write unit tests using JUnit. has context menu
	 */



  Given a string containing just the characters ‘{’, ‘}’, ‘(’, ’)’, ’[’ and ‘]’, determine if the input string is valid. An input string is valid if: Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Every open bracket has a corresponding close bracket. 


Examples: Input: s = “{}” Output: true
	  Input: s = “(]{}” Output: false
	  Input: s = “(){}[]” Output: true
	  Constraints: s consists of parentheses only ‘(){}[]’
-- morgan stanley 

sql question with the coumn specific 
finds errors in the code 
shopping cart example for finding a 
find 2pow0 of numbers 
most commun fruit question in java
hashtable internal implementation
create a internal mechanisum of a  producer and consumer cases.



